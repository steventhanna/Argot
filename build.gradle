/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'steventhanna' at '7/25/16 4:12 PM' with Gradle 2.14
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

version = '0.1.0'

task runApp(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'Main'
  // Arguments to pass to the application
  /*args '--help'*/
  /*args '-v'*/
  args '-p /Users/steventhanna/Desktop/Programming/therender/nba-api'
  args '-d /Users/steventhanna/Desktop/Programming/therender/nba-api/doc'
  args '-r'
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'argot',
        	'Implementation-Version': version,
        	'Main-Class': 'Main'
    }
    baseName = "argot"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // https://mvnrepository.com/artifact/commons-cli/commons-cli
    compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.5'



    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
